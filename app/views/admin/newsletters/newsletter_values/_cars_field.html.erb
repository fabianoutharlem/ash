<div class="form-group">

  <%= f.label f.object.newsletter_template_value.option_name.to_sym, class: 'col-sm-2 control-label' %>
  <div class="col-sm-10">
    <%= f.select :value, (f.object.try(:cars).present? ? options_from_collection_for_select(f.object.cars, :id, :display_name, f.object.value) : {}), {}, class: "form-control #{f.object.newsletter_template_value.option_name}", multiple: true %>
  </div>

</div>

<script type="text/javascript" charset="utf-8">

  $(document).ready(function () {
    var $select = $('.<%= f.object.newsletter_template_value.option_name %>');

    $select.select2({
      ajax: {
        url: "/admin/cars/search",
        dataType: 'json',
        theme: "bootstrap",
        delay: 250,
        multiple: true,
        data: function (params) {
          return {
            q: params.term, // search term
            page: params.page
          };
        },
        processResults: function (data, params) {
          // parse the results into the format expected by Select2
          // since we are using custom formatting functions we do not need to
          // alter the remote JSON data, except to indicate that infinite
          // scrolling can be used
          params.page = params.page || 1;

          return {
            results: data.cars,
            pagination: {
              more: (params.page * 24) < data.total_count
            }
          };
        },
        cache: true
      },
      escapeMarkup: function (markup) { return markup; },
      minimumInputLength: 1,
      templateResult: formatCar,
      templateSelection: formatCarSelection
    });
  });

  function formatCar (car) {
    if (car.loading) return car.display_name;

    var markup = "<div class='select2-result-repository clearfix'>" +
        "<div class='select2-result-avatar'><img src='" + car.main_image_url + "' /></div>" +
        "<div class='select2-result-meta'>" +
        "<div class='select2-result-title'>" + car.display_name + "</div></div></div>";

    return markup;
  }

  function formatCarSelection (car) {
    return car.display_name || car.text;
  }


</script>